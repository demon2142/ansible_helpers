###########################################
#FOR CONFIGURATION OF IPSETS for FIREWALLD#
###########################################

# For use in configuration files "02_conf_zone_sources" and "04_conf_zone_rich_rules_special" as well as within the parameter
    # "zone_rich_rules_general" (config files "01_conf_custom_firewall_zones_templates" and "01_conf_standard_firewall_zones_templates").
# It is possible to create several ipset conf (#ipset_name) with the same name but within different template_names to apply to different hosts.
# Ipset conf template names must be unique.
# Configuration templates where a specific list of inventory hosts (separated by ",") is specified within
    # the "inv_host_list_for_apply" parameter take precedence (over "inv_host_list_for_apply=all").
# The ipset template name must always contain a substring "--TMPLT" at the end.
# Ipset conf template name examples: ipset1--TMPLT, ipset--ver1--TMPLT, ipset--special_ver2--TMPLT.
# About version of ipset = ipset v7.1, protocol version: 7

###EXAMPLE (with explanation)
#[some_ipset_template_name--TMPLT:BEGIN]
#ipset_name=some_ipset_name
    # All ipsets not configured within this config will be removed on remote hosts.
    # Create ipset-list with default options = "firewall-cmd --permanent --new-ipset=some_ipset_name --type=some_ipset_type" (for information only).

###ipset create options
#ipset_create_option_timeout=0|some_timeout
    # Default = 0.
    # Original name of paramameter = timeout.
    # If equal to "0" then ipset elements are used without time limits.
    # If the value is greater than 0 (for example, 50) then any added element will be removed from the set after the specified time (in seconds), for example, after 50 seconds.

#ipset_create_option_counters_is_enabled=no|yes
    # Default = no.
    # Original name of paramameter = counters.
    # If "yes" -> allowed "packets, bytes" options when adding items to the set.

#ipset_create_option_comment=empty|some_comment
    # Default = empty.
    # Original name of paramameter = comment.

#ipset_create_option_skbinfo_is_enabled=no|yes
    # Default = no.
    # Original name of paramameter = skbinfo.
    # If "yes" -> allowed "skbmark, skbprio, skbqueue" options when adding items to the set.

#ipset_create_option_hashsize=1024
    # Deault = 1024.
    # Original name of paramameter = hashsize.
    # Parameter defines the initial hash size for the set.
    # The hash size must be a power of two, the kernel automatically rounds up non power of two hash sizes to the first correct value.

#ipset_create_option_maxelem=65536
    # Default = 65536.
    # Original name of paramameter = maxelem.
    # This parameter is valid for the create command of all hash type sets. It does define the maximal number of elements which can be stored in the set.

#ipset_create_option_family=inet|inet6
    # Default = inet (IPv4).
    # Original name of paramameter = family.
    # This parameter is valid for the create command of all hash type sets except for "hash:mac".
    # It defines the protocol family of the IP addresses to be stored in the set.
    # For the inet family one can add or delete multiple entries by specifying a range or a network of IPv4 addresses in the IP address part of the entry.

#ipset_create_option_forceadd_is_enabled=no|yes
    # Default = no.
    # Original name of paramameter = forceadd.
    # When sets created with this option become full (if > #ipset_create_option_maxelem) the next addition to the set may succeed and evict a random entry from the set.
    
    # Create ipset-list with custom options = "firewall-cmd --permanent --new-ipset=some_ipset_name --type=hash:net --option=family=inet --option=hashsize=4096 --option=maxelem=200000" (for information only).
###ipset create options

###ipset add options (for information only)
# nomatch (for information only)
    # When matching elements in the set, entries marked as nomatch are skipped as if those were not added to the set, which makes possible to build up sets with exceptions.
    # For apply to ipset_types: hash:net; hash:net,port; hash:net,iface; hash:ip,port,net; hash:net,net; hash:net,port,net.

# packets (for information only)
    # Allowed only if "ipset_create_option_counters_is_enabled=yes".
    # For apply to ipset_types: hash:ip; hash:ip,port; hash:ip,mark; hash:net; hash:net,port; hash:net,iface; hash:mac; hash:ip,port,ip; hash:ip,port,net; hash:net,net; hash:net,port,net.

# bytes (for information only)
    # Allowed only if "ipset_create_option_counters_is_enabled=yes".
    # For apply to ipset_types: hash:ip; hash:ip,port; hash:ip,mark; hash:net; hash:net,port; hash:net,iface; hash:mac; hash:ip,port,ip; hash:ip,port,net; hash:net,net; hash:net,port,net.

# skbmark (for information only)
    # Allowed only if "ipset_create_option_skbinfo_is_enabled=yes".
    # For apply to ipset_types: hash:ip; hash:ip,port; hash:ip,mark; hash:net; hash:net,port; hash:net,iface; hash:mac; hash:ip,port,ip; hash:ip,port,net; hash:net,net; hash:net,port,net.

# skbprio (for information only)
    # Allowed only if "ipset_create_option_skbinfo_is_enabled=yes".
    # For apply to ipset_types: hash:ip; hash:ip,port; hash:ip,mark; hash:net; hash:net,port; hash:net,iface; hash:mac; hash:ip,port,ip; hash:ip,port,net; hash:net,net; hash:net,port,net.

# skbqueue (for information only)
    # Allowed only if "ipset_create_option_skbinfo_is_enabled=yes".
    # For apply to ipset_types: hash:ip; hash:ip,port; hash:ip,mark; hash:net; hash:net,port; hash:net,iface; hash:mac; hash:ip,port,ip; hash:ip,port,net; hash:net,net; hash:net,port,net.
###ipset add options

#ipset_type=some_ipset_type
    # Possible values:
	# Therefore only a limited list of ipset types can be used as sources in zones: hash:ip; hash:ip,port; hash:ip,mark; hash:net; hash:net,port; hash:net,iface; hash:mac.
	###
	# hash:ip = a selective list of IP addresses (or IP subnets with the same mask).
	    # Allowed create-options (via this config): family, hashsize, maxelem, netmask, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # Can be used as source in zones.
	    # Examples:
		# 192.168.10.67
		# 192.168.11.0/24
	
	# hash:ip,port = a selective list of IP addresses, where a port can be stored with each address. You can also store a transport layer protocol ID for each port number.
	    # Allowed create-options (via this config): family, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # Can be used as source in zones.
	    # Examples:
		# 192.168.12.12,udp:53
		# 192.168.1.0/24,80-82
		# 192.168.1.1,vrrp:0
		# 192.168.1.1,80

	# hash:ip,mark = uses a hash to store IP address and packet mark pairs. Allows you to set bits you are interested in the packet mark.
	    # Allowed create-options (via this config): family, markmask, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # This values is then used to perform bitwise AND operation for every mark added. Markmask can be any value between 1 and 4294967295, by default all 32 bits are set.
	    # The mark can be any value between 0 and 4294967295.
	    # Can be used as source in zones.
	    # Examples:
		# 192.168.1.0/24,555
		# 192.168.1.1,0x63
		# 192.168.1.1,111236

	# hash:net = selective list of IP subnets (blocks of IP addresses). Unlike "hash:ip", subnets with different masks can be present in one list.
	    # Allowed create-options (via this config): family, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, nomatch, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # Can be used as source in zones.
	    # Examples:
		# 192.168.0.0/24
		# 10.1.0.0/16
		# 192.168.0/24
		# 192.168.0/30 nomatch (nomatch = exception)

	# hash:net,port = uses a hash to store different sized IP network address and port pairs.
	    # Allowed create-options (via this config): family, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, nomatch, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # The port number is interpreted together with a protocol (default TCP) and zero protocol number cannot be used.
	    # Network address with zero prefix size is not accepted either.
	    # You can also store a transport layer protocol ID for each port number.
	    # Can be used as source in zones.
	    # Examples:
		# 192.168.0/24,25
		# 10.1.0.0/16,80
		# 192.168.0/24,25
		# 192.168.1.0/24,tcp:8081

	# hash:net,iface = a selective list of IP subnets, whereby the name of the network interface can be stored with each subnet.
	    # Allowed create-options (via this config): family, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, nomatch, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # There is a limitation that you cannot store more than 64 interface names with the same subnet address.
	    # This data type is useful when a system has a large number of network interfaces (for example, hundreds of VLAN interfaces).
	    # Can be used as source in zones.
	    # Examples:
		# 192.168.0/24,eth0
		# 10.1.0.0/16,eth1
		# 192.168.0/24,eth0

	# hash:mac = uses a hash to store MAC addresses. Zero valued MAC addresses cannot be stored in a "hash:mac" type of set. For matches on destination MAC addresses.
	    # Allowed create-options (via this config): hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # Can be used as source in zones.
	    # Examples:
		# 01:02:03:04:05:06
	#############################################
	# hash:ip,port,ip = a selective list of IP addresses, where a port and one more IP address can be stored with each address.
	    # Allowed create-options (via this config): family, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # You can also store a transport layer protocol ID for each port number.
	    # Examples:
		# 192.168.1.1,80,10.0.0.1
		# 192.168.1.1,udp:53,10.0.0.1
	
	# hash:ip,port,net = a selective list of IP addresses, where a port and an IP subnet can be stored with each address.
	    # Allowed create-options (via this config): family, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, nomatch, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # You can also store a transport layer protocol ID for each port number.
	    # Examples:
		# 192.168.1,tcp:8080,10.0.0/24
		# 192.168.2,25,10.1.0.0/16
		# 192.168.1,80.10.0.0/24
	
	# hash:net,net = uses a hash to store pairs of different sized IP network addresses.
	    # Allowed create-options (via this config): family, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, nomatch, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # Bear in mind that the first parameter has precedence over the second, so a nomatch entry could be potentially be ineffective if a more specific first parameter 
	    # existed with a suitable second parameter. Network address with zero prefix size cannot be stored in this type of set.
	    # Examples:
		# 192.168.0.0/24,10.0.1.0/24
		# 10.1.0.0/16,10.255.0.0/24
		# 192.168.0/24,192.168.54.0-192.168.54.255
		# 192.168.0/30,192.168.64/30 nomatch
	
	# hash:net,port,net = behaves similarly to hash:ip,port,net but accepts a cidr value for both the first and last parameter.
	    # Allowed create-options (via this config): family, hashsize, maxelem, timeout, counters, comment, skbinfo.
	    # Allowed add-options (via "ipset_input_dir"): timeout, nomatch, packets, bytes, comment, skbmark, skbprio, skbqueue (for information only).
	    # Either subnet is permitted to be a /0 should you wish to match port between all destinations.
	    # You can also store a transport layer protocol ID for each port number.
	    # Examples:
		# 192.168.1.0/24,0,10.0.0/24
		# 192.168.2.0/24,25,10.1.0.0/16
		# 192.168.1.1,80,10.0.0.1
		# 192.168.1.2,tcp:8081,10.0.0.2.
	
    # Get ipset-types = "firewall-cmd --get-ipset-types" (for information only).
    # Create ipset with parameters = "firewall-cmd --permanent --new-ipset=some_ipset_name --type=hash:net --option=family=inet --option=hashsize=4096 --option=maxelem=200000" (for information only).

#inv_host_list_for_apply=all/list of inventory hosts separated by ",".
    # If "all" -> the configuration will be applied to all inventory hosts.

#ipset_input_dir (for information only).
    
    # Add ipset list from file = "firewall-cmd --permanent --ipset=some_ipset_name --add-entries-from-file=some_ipset_list.txt" (for information only).
    # Remove ipset list from file = "firewall-cmd --permanent --ipset=some_ipset_name --remove-entries-from-file=some_ipset_list.txt" (for information only).
#[some_ipset_template_name--TMPLT:END]
