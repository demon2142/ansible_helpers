# APPLY IPSET, ZONES, POLICIES
######################################################STEP 1. Check for locally generated fwrules files is exist (begin)
# fill vars: recreate_permanent_ipsets_sh_exists_at_local, recreate_temporary_ipsets_sh_exists_at_local, 
# recreate_fw_zones_sh_exists_at_local, recreate_policies_sh_exists_at_local, rollback_fwrules_changes_sh_exists_at_local

- name: "if exists at localhost 'INV-HOST_recreate_permanent_ipsets.sh' for apply"
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_recreate_permanent_ipsets.sh"
  register: recreate_permanent_ipsets_sh_exists_at_local

######

- name: "if exists at localhost 'INV-HOST_recreate_temporary_ipsets.sh' for apply"
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_recreate_temporary_ipsets.sh"
  register: recreate_temporary_ipsets_sh_exists_at_local

######

- name: "if exists at localhost 'INV-HOST_recreate_fw_zones.sh' for apply"
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_recreate_fw_zones.sh"
  register: recreate_fw_zones_sh_exists_at_local

######

- name: "if exists at localhost 'INV-HOST_recreate_policies.sh' for apply"
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_recreate_policies.sh"
  register: recreate_policies_sh_exists_at_local

######

- name: "if exists at localhost 'INV-HOST_rollback_fwrules_changes.sh'"
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_rollback_fwrules_changes.sh"
  register: rollback_fwrules_changes_sh_exists_at_local

######################################################STEP 1. Check for locally generated fwrules files is exist (end)

######################################################STEP 2. Check for remote files is exist (begin)
# fill vars: recreate_permanent_ipsets_sh_exists_at_remote, recreate_temporary_ipsets_sh_exists_at_remote

- name: "if exists at remote 'recreate_permanent_ipsets.sh' for apply"
  ansible.builtin.stat:
    path: "~/ansible_helpers/conf_firewalld/recreate_permanent_ipsets.sh"
  register: recreate_permanent_ipsets_sh_exists_at_remote

######

- name: "if exists at remote 'recreate_temporary_ipsets.sh' for apply"
  ansible.builtin.stat:
    path: "~/ansible_helpers/conf_firewalld/recreate_temporary_ipsets.sh"
  register: recreate_temporary_ipsets_sh_exists_at_remote

######################################################STEP 2. Check for remote files is exist (end)

######################################################STEP 3. Create dirs at remote side (begin)

- name: create_dir "~/ansible_helpers/conf_firewalld" at remote if not exists
  ansible.builtin.file:
    path: "~/ansible_helpers/conf_firewalld"
    state: directory

######

- name: create_dir "ansible_helpers/conf_firewalld/apply_run_info" at remote if not exists
  ansible.builtin.file:
    path: "~/ansible_helpers/conf_firewalld/apply_run_info"
    state: directory

######################################################STEP 3. Create dirs at remote side (end)

######################################################STEP 4. Make copies of 'recreate_permanent_ipsets.sh' and 'recreate_temporary_ipsets.sh' if need (begin)

######################################################STEP 4. Make copies of 'recreate_permanent_ipsets.sh' and 'recreate_temporary_ipsets.sh' if need (end)

######################################################STEP 5. Copy (local->remote) recreated fwrules-files and rollback-script to remote if need (begin)

- name: copy_recreate_permanent_ipset_to_remote
  ansible.builtin.copy:
    src: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_recreate_permanent_ipsets.sh"
    dest: "~/ansible_helpers/conf_firewalld/recreate_permanent_ipsets.sh"
    owner: root
    group: root
    mode: '0770'
    backup: yes
  register: copy_recreate_permanent_ipset_to_remote_res
  when: recreate_permanent_ipsets_sh_exists_at_local.stat.exists==true

######

- name: copy_recreate_temporary_ipset_to_remote
  ansible.builtin.copy:
    src: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_recreate_temporary_ipsets.sh"
    dest: "~/ansible_helpers/conf_firewalld/recreate_temporary_ipsets.sh"
    owner: root
    group: root
    mode: '0770'
    backup: yes
  register: copy_recreate_temporary_ipset_to_remote_res
  when: recreate_temporary_ipsets_sh_exists_at_local.stat.exists==true

######

- name: copy_recreate_fw_zones_to_remote
  ansible.builtin.copy:
    src: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_recreate_fw_zones.sh"
    dest: "~/ansible_helpers/conf_firewalld/recreate_fw_zones.sh"
    owner: root
    group: root
    mode: '0770'
    backup: yes
  register: copy_recreate_fw_zones_to_remote_res
  when: recreate_fw_zones_sh_exists_at_local.stat.exists==true

######

- name: copy_recreate_policies_to_remote
  ansible.builtin.copy:
    src: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_recreate_policies.sh"
    dest: "~/ansible_helpers/conf_firewalld/recreate_policies.sh"
    owner: root
    group: root
    mode: '0770'
    backup: yes
  register: copy_recreate_policies_to_remote_res
  when: recreate_policies_sh_exists_at_local.stat.exists==true

######

- name: copy_rollback_fwrules_changes_to_remote_if_need
  ansible.builtin.copy:
    src: "{{playbook_dir}}/scripts_for_remote/fwrules_files/{{inventory_hostname}}_rollback_fwrules_changes.sh"
    dest: "~/ansible_helpers/conf_firewalld/rollback_fwrules_changes.sh"
    owner: root
    group: root
    mode: '0770'
  when: rollback_fwrules_changes_sh_exists_at_local.stat.exists==true

######

- name: copy_apply_fwrules_sh_to_remote
  ansible.builtin.copy:
    src: "{{playbook_dir}}/scripts_for_remote/apply_fwrules.sh"
    dest: "~/ansible_helpers/conf_firewalld/apply_fwrules.sh"
    owner: root
    group: root
    mode: '0770'

######################################################STEP 5. Copy (local->remote) recreated fwrules-files and rollback-script to remote if need (end)

######################################################STEP 6. Create apply-run-info-files at remote side (begin)

- name: create apply-run-info-file "recreate_permanent_ipsets_changed" at remote
  ansible.builtin.shell: touch ~/ansible_helpers/conf_firewalld/apply_run_info/recreate_permanent_ipsets_changed
  when: copy_recreate_permanent_ipset_to_remote_res.changed==true

######

- name: create apply-run-info-file "recreate_temporary_ipsets_changed" at remote
  ansible.builtin.shell: touch ~/ansible_helpers/conf_firewalld/apply_run_info/recreate_temporary_ipsets_changed
  when: copy_recreate_temporary_ipset_to_remote_res.changed==true

######

- name: create apply-run-info-file "recreate_fw_zones_changed" at remote
  ansible.builtin.shell: touch ~/ansible_helpers/conf_firewalld/apply_run_info/recreate_fw_zones_changed
  when: copy_recreate_fw_zones_to_remote_res.changed==true

######

- name: create apply-run-info-file "recreate_policies_changed" at remote
  ansible.builtin.shell: touch ~/ansible_helpers/conf_firewalld/apply_run_info/recreate_policies_changed
  when: copy_recreate_policies_to_remote_res.changed==true

######

- name: create apply-run-info-file "rollback_fwrules_need_run" at remote
  ansible.builtin.shell: touch ~/ansible_helpers/conf_firewalld/apply_run_info/rollback_fwrules_need_run
  when: rollback_fwrules_changes_sh_exists.stat.exists==true

######################################################STEP 6. Create apply-run-info-files at remote side (end)