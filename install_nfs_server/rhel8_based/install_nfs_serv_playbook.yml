---
- hosts: all_hosts
  tasks:
    - name: install_nfs_utils
      dnf:
        name: nfs-utils
        state: installed

###COMMENT this if selinux is disabled
    - name: set_nfs_export_all_rw
      ansible.posix.seboolean:
        name: nfs_export_all_rw
        state: yes
        persistent: yes
###COMMENT this if selinux is disabled
    
###NFS
    - name: enable_n_if_started_nfs_server_serv
      ansible.builtin.systemd:
        name: nfs-server.service
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_nfs_idmapd_serv
      ansible.builtin.systemd:
        name: nfs-idmapd.service
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_nfs_mountd_serv
      ansible.builtin.systemd:
        name: nfs-mountd.service
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_nfsdcld_serv
      ansible.builtin.systemd:
        name: nfsdcld.service
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_nfs_client_targ
      ansible.builtin.systemd:
        name: nfs-client.target
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_nfs_rpc_pipefs_mnt
      ansible.builtin.systemd:
        name: var-lib-nfs-rpc_pipefs.mount
        state: started
        masked: no
    
    - name: enable_n_if_started_nfsd_mnt
      ansible.builtin.systemd:
        name: proc-fs-nfsd.mount
        state: started
        masked: no
    
###RPCbind
    - name: enable_n_if_started_rpcbind_serv
      ansible.builtin.systemd:
        name: rpcbind.service
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_rpcbind_sock
      ansible.builtin.systemd:
        name: rpcbind.socket
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_rpc_statd_serv
      ansible.builtin.systemd:
        name: rpc-statd.service
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_rpc_statd_notif_serv
      ansible.builtin.systemd:
        name: rpc-statd-notify.service
        state: started
        enabled: yes
        masked: no
    
    - name: enable_n_if_started_rpc_pipefs_targ
      ansible.builtin.systemd:
        name: rpc_pipefs.target
        state: started
        masked: no

    - name: check_if_started_rpcbind_targ
      ansible.builtin.systemd:
        name: rpcbind.target
        state: started
        masked: no
      register: rpcbind_targ_res
      ignore_errors: true

    - name: run_rpcbin_serv_if_rpcbind_targ_not_started
      ansible.builtin.systemd:
        name: rpcbind.service
        state: restarted
        masked: no
      when: rpcbind_targ_res.failed==true

###Copy and check CFG
    - name: copy_nfs_server_conf_to_remote
      ansible.builtin.copy:
        src: nfs_server.conf
        dest: /etc/nfs.conf
        owner: root
        group: root
        mode: '0644'
###COMMENT this if selinux is disabled
        seuser: system_u
        setype: etc_t
        serole: object_r
        selevel: s0
###COMMENT this if selinux is disabled
        backup: yes
      register: copy_nfs_server_conf_to_remote_res
    
    - name: copy_nfsmount_server_conf_to_remote
      ansible.builtin.copy:
        src: nfsmount_server.conf
        dest: /etc/nfsmount.conf
        owner: root
        group: root
        mode: '0644'
###COMMENT this if selinux is disabled
        seuser: system_u
        setype: etc_t
        serole: object_r
        selevel: s0
###COMMENT this if selinux is disabled
        backup: yes
      register: copy_nfsmount_server_conf_to_remote_res
    
    - name: run_cfg_reload_for_nfs_server_if_conf_files_changed
      ansible.builtin.systemd:
        name: nfs-server.service
        state: reloaded
        masked: no
      when: copy_nfs_server_conf_to_remote_res.changed==true or copy_nfsmount_server_conf_to_remote_res.changed==true

    - name: "check_for_special_export_file_for_{{inventory_hostname}}"
      delegate_to: localhost
      stat:
        path: "{{playbook_dir}}/exports/{{inventory_hostname}}"
      register: is_special_export

    - name: copy_nfs_exports_conf_to_remote
      ansible.builtin.copy:
        src: "{{playbook_dir}}/exports/{{inventory_hostname}}"
        dest: /etc/exports
        owner: root
        group: root
        mode: '0644'
###COMMENT this if selinux is disabled
        seuser: system_u
        setype: exports_t
        serole: object_r
        selevel: s0
###COMMENT this if selinux is disabled
        backup: yes
      register: copy_nfs_exports_conf_to_remote_res
      when: is_special_export.stat.exists==true

    - name: copy_nfs_exports_conf_to_remote
      ansible.builtin.copy:
        src: nfs_exports_config
        dest: /etc/exports
        owner: root
        group: root
        mode: '0644'
###COMMENT this if selinux is disabled
        seuser: system_u
        setype: exports_t
        serole: object_r
        selevel: s0
###COMMENT this if selinux is disabled
        backup: yes
      register: copy_nfs_exports_conf_to_remote_res
      when: is_special_export.stat.exists==false

    - name: run_exportfs_if_exports_file_changed
      ansible.builtin.command: /usr/sbin/exportfs -arv
      when: copy_nfs_exports_conf_to_remote_res.changed==true
